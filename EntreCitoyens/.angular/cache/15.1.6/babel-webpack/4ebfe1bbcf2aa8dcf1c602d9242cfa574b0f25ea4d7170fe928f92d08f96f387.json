{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../../Services/resource/resource.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction ResourceDetailsComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function ResourceDetailsComponent_div_16_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const comment_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.deleteComment(comment_r1.id));\n    });\n    i0.ɵɵtext(4, \"Supprimer\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const comment_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(comment_r1.text);\n  }\n}\nexport class ResourceDetailsComponent {\n  constructor(route, router, resourceService) {\n    this.route = route;\n    this.router = router;\n    this.resourceService = resourceService;\n  }\n  ngOnInit() {\n    const resourceId = this.route.snapshot.paramMap.get('id');\n    if (resourceId) {\n      this.fetchResourceDetail(resourceId);\n    } else {\n      // Gérer le cas où l'ID de la ressource n'est pas disponible\n    }\n  }\n  fetchResourceDetail(resourceId) {\n    this.resourceService.getResourceById(resourceId).subscribe(resource => {\n      this.resourceDetail = resource;\n    }, error => {\n      // Gérer les erreurs ici\n    });\n  }\n  shareResource() {\n    // Logique de partage de la ressource\n    // Par exemple, ouvrir une boîte de dialogue avec le lien de partage\n  }\n  editResource() {\n    const resourceId = this.resourceDetail.id;\n    this.router.navigate(['/resource/edit', resourceId]);\n  }\n  deleteResource() {\n    const resourceId = this.resourceDetail.id;\n    this.resourceService.deleteResource(resourceId).subscribe(() => {\n      // Gérer la suppression réussie ici\n      // Par exemple, rediriger vers la liste des ressources\n      this.router.navigate(['/resources']);\n    }, error => {\n      // Gérer les erreurs ici\n    });\n  }\n  addComment() {\n    const commentText = this.newComment;\n    const comment = {\n      text: commentText\n    };\n    this.resourceService.addComment(this.resourceDetail.id, comment).subscribe(() => {\n      // Gérer l'ajout du commentaire réussi ici\n      // Par exemple, actualiser la liste des commentaires\n      this.fetchResourceDetail(this.resourceDetail.id);\n      this.newComment = '';\n    }, error => {\n      // Gérer les erreurs ici\n    });\n  }\n  deleteComment(commentId) {\n    this.resourceService.deleteComment(this.resourceDetail.id, commentId).subscribe(() => {\n      // Gérer la suppression du commentaire réussie ici\n      // Par exemple, actualiser la liste des commentaires\n      this.fetchResourceDetail(this.resourceDetail.id);\n    }, error => {\n      // Gérer les erreurs ici\n    });\n  }\n}\nResourceDetailsComponent.ɵfac = function ResourceDetailsComponent_Factory(t) {\n  return new (t || ResourceDetailsComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.ResourceService));\n};\nResourceDetailsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ResourceDetailsComponent,\n  selectors: [[\"app-resource-details\"]],\n  decls: 17,\n  vars: 4,\n  consts: [[1, \"resource-detail\"], [3, \"click\"], [3, \"submit\"], [\"placeholder\", \"Ajouter un commentaire\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"], [1, \"comment-list\"], [\"class\", \"comment\", 4, \"ngFor\", \"ngForOf\"], [1, \"comment\"]],\n  template: function ResourceDetailsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"p\");\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function ResourceDetailsComponent_Template_button_click_5_listener() {\n        return ctx.shareResource();\n      });\n      i0.ɵɵtext(6, \"Partager\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function ResourceDetailsComponent_Template_button_click_7_listener() {\n        return ctx.editResource();\n      });\n      i0.ɵɵtext(8, \"Modifier\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function ResourceDetailsComponent_Template_button_click_9_listener() {\n        return ctx.deleteResource();\n      });\n      i0.ɵɵtext(10, \"Supprimer\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"form\", 2);\n      i0.ɵɵlistener(\"submit\", function ResourceDetailsComponent_Template_form_submit_11_listener() {\n        return ctx.addComment();\n      });\n      i0.ɵɵelementStart(12, \"textarea\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function ResourceDetailsComponent_Template_textarea_ngModelChange_12_listener($event) {\n        return ctx.newComment = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"button\", 4);\n      i0.ɵɵtext(14, \"Ajouter\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\", 5);\n      i0.ɵɵtemplate(16, ResourceDetailsComponent_div_16_Template, 5, 1, \"div\", 6);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.resourceDetail.title);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.resourceDetail.description);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.newComment);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.resourceDetail.comment);\n    }\n  },\n  dependencies: [i3.NgForOf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","ResourceDetailsComponent","constructor","route","router","resourceService","ngOnInit","resourceId","snapshot","paramMap","get","fetchResourceDetail","getResourceById","subscribe","resource","resourceDetail","error","shareResource","editResource","id","navigate","deleteResource","addComment","commentText","newComment","comment","text","deleteComment","commentId","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\lola\\Documents\\GitHub\\AngularProject\\EntreCitoyens\\src\\app\\Components\\resource\\resource-details\\resource-details.component.html","C:\\Users\\lola\\Documents\\GitHub\\AngularProject\\EntreCitoyens\\src\\app\\Components\\resource\\resource-details\\resource-details.component.ts"],"sourcesContent":["<div class=\"resource-detail\">\n  <h2>{{ resourceDetail.title }}</h2>\n  <p>{{ resourceDetail.description }}</p>\n\n  <!-- Partager la ressource -->\n  <button (click)=\"shareResource()\">Partager</button>\n\n  <!-- Modifier la ressource -->\n  <button (click)=\"editResource()\">Modifier</button>\n\n  <!-- Supprimer la ressource -->\n  <button (click)=\"deleteResource()\">Supprimer</button>\n\n  <!-- Ajouter un commentaire -->\n  <form (submit)=\"addComment()\">\n    <textarea [(ngModel)]=\"newComment\" placeholder=\"Ajouter un commentaire\"></textarea>\n    <button type=\"submit\">Ajouter</button>\n  </form>\n\n  <!-- Liste des commentaires -->\n  <div class=\"comment-list\">\n    <div *ngFor=\"let comment of resourceDetail.comment\" class=\"comment\">\n      <p>{{ comment.text }}</p>\n      <button (click)=\"deleteComment(comment.id)\">Supprimer</button>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ResourceService } from '../../../Services/resource/resource.service';\nimport { Resource } from '../../../DTO/resource';\nimport { Comment } from '../../../DTO/comment';\n\n@Component({\n  selector: 'app-resource-details',\n  templateUrl: './resource-details.component.html',\n  styleUrls: ['./resource-details.component.scss']\n})\nexport class ResourceDetailsComponent implements OnInit {\n  resourceDetail: Resource;\n  newComment: string;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private resourceService: ResourceService\n  ) { }\n\n  ngOnInit(): void {\n    const resourceId = this.route.snapshot.paramMap.get('id');\n    if (resourceId) {\n      this.fetchResourceDetail(resourceId);\n    } else {\n      // Gérer le cas où l'ID de la ressource n'est pas disponible\n    }\n  }\n\n  fetchResourceDetail(resourceId: string): void {\n    this.resourceService.getResourceById(resourceId).subscribe(\n      (resource: Resource) => {\n        this.resourceDetail = resource;\n      },\n      (error) => {\n        // Gérer les erreurs ici\n      }\n    );\n  }\n\n  shareResource(): void {\n    // Logique de partage de la ressource\n    // Par exemple, ouvrir une boîte de dialogue avec le lien de partage\n  }\n\n  editResource(): void {\n    const resourceId = this.resourceDetail.id;\n    this.router.navigate(['/resource/edit', resourceId]);\n  }\n\n  deleteResource(): void {\n    const resourceId = this.resourceDetail.id;\n    this.resourceService.deleteResource(resourceId).subscribe(\n      () => {\n        // Gérer la suppression réussie ici\n        // Par exemple, rediriger vers la liste des ressources\n        this.router.navigate(['/resources']);\n      },\n      (error) => {\n        // Gérer les erreurs ici\n      }\n    );\n  }\n\n  addComment(): void {\n    const commentText = this.newComment;\n    const comment: Comment = { text: commentText };\n\n    this.resourceService.addComment(this.resourceDetail.id, comment).subscribe(\n      () => {\n        // Gérer l'ajout du commentaire réussi ici\n        // Par exemple, actualiser la liste des commentaires\n        this.fetchResourceDetail(this.resourceDetail.id);\n        this.newComment = '';\n      },\n      (error) => {\n        // Gérer les erreurs ici\n      }\n    );\n  }\n\n  deleteComment(commentId: string): void {\n    this.resourceService.deleteComment(this.resourceDetail.id, commentId).subscribe(\n      () => {\n        // Gérer la suppression du commentaire réussie ici\n        // Par exemple, actualiser la liste des commentaires\n        this.fetchResourceDetail(this.resourceDetail.id);\n      },\n      (error) => {\n        // Gérer les erreurs ici\n      }\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}