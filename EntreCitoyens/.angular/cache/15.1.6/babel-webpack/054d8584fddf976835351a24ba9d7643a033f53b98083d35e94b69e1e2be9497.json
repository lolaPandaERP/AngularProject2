{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../../Services/resource/resource.service\";\nexport class ResourceShareComponent {\n  constructor(route, resourceService) {\n    this.route = route;\n    this.resourceService = resourceService;\n    this.resource = {\n      id: '',\n      title: '',\n      description: '',\n      content: '',\n      image_path: '',\n      createdBy: '',\n      createdAt: '',\n      comment: ''\n    };\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.resourceId = params['id'];\n      this.fetchResource();\n    });\n  }\n  fetchResource() {\n    this.resourceService.getResourceById(this.resourceId).subscribe(resource => {\n      if (resource) {\n        this.resource = resource;\n      } else {\n        // Handle resource not found\n      }\n    });\n  }\n}\nResourceShareComponent.ɵfac = function ResourceShareComponent_Factory(t) {\n  return new (t || ResourceShareComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ResourceService));\n};\nResourceShareComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ResourceShareComponent,\n  selectors: [[\"app-resource-share\"]],\n  decls: 2,\n  vars: 0,\n  template: function ResourceShareComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Share Resource\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;AA4CA,OAAM,MAAOA,sBAAsB;EAcjCC,YACUC,KAAqB,EACrBC,eAAgC;IADhC,UAAK,GAALD,KAAK;IACL,oBAAe,GAAfC,eAAe;IAbzB,aAAQ,GAAa;MACnBC,EAAE,EAAE,EAAE;MACNC,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE,EAAE;MACfC,OAAO,EAAE,EAAE;MACXC,UAAU,EAAE,EAAE;MACdC,SAAS,EAAE,EAAE;MACbC,SAAS,EAAE,EAAE;MACbC,OAAO,EAAE;KACV;EAKG;EAEJC,QAAQ;IACN,IAAI,CAACV,KAAK,CAACW,MAAM,CAACC,SAAS,CAACD,MAAM,IAAG;MACnC,IAAI,CAACE,UAAU,GAAGF,MAAM,CAAC,IAAI,CAAC;MAC9B,IAAI,CAACG,aAAa,EAAE;IACtB,CAAC,CAAC;EACJ;EAEAA,aAAa;IACX,IAAI,CAACb,eAAe,CAACc,eAAe,CAAC,IAAI,CAACF,UAAU,CAAC,CAACD,SAAS,CAACI,QAAQ,IAAG;MACzE,IAAIA,QAAQ,EAAE;QACZ,IAAI,CAACA,QAAQ,GAAGA,QAAQ;OACzB,MAAM;QACL;MAAA;IAEJ,CAAC,CAAC;EACJ;;AAlCWlB,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;QAAtBA,sBAAsB;EAAAmB;EAAAC;EAAAC;EAAAC;IAAA;MC3CnCC,0BAAI;MAAAA,8BAAc;MAAAA,iBAAK","names":["ResourceShareComponent","constructor","route","resourceService","id","title","description","content","image_path","createdBy","createdAt","comment","ngOnInit","params","subscribe","resourceId","fetchResource","getResourceById","resource","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\lola\\Documents\\GitHub\\AngularProject2\\EntreCitoyens\\src\\app\\Components\\resource\\resource-share\\resource-share.component.ts","C:\\Users\\lola\\Documents\\GitHub\\AngularProject2\\EntreCitoyens\\src\\app\\Components\\resource\\resource-share\\resource-share.component.html"],"sourcesContent":["// import { Component, OnInit } from '@angular/core';\r\n// import { ActivatedRoute } from '@angular/router';\r\n\r\n// import { Resource } from '../../../DTO/resource';\r\n// import { ResourceService } from '../../../Services/resource/resource.service';\r\n\r\n// @Component({\r\n//   selector: 'app-resource-share',\r\n//   templateUrl: './resource-share.component.html',\r\n//   styleUrls: ['./resource-share.component.scss']\r\n// })\r\n// export class ResourceShareComponent implements OnInit {\r\n//   resource: Resource;\r\n\r\n//   constructor(\r\n//     private route: ActivatedRoute,\r\n//     private resourceService: ResourceService\r\n//   ) { }\r\n\r\n//   ngOnInit(): void {\r\n//     const resourceId = this.route.snapshot.paramMap.get('id');\r\n//     if (resourceId) {\r\n//       this.resourceService.getResourceById(resourceId).subscribe(\r\n//         (resource: Resource) => {\r\n//           this.resource = resource;\r\n//         },\r\n//         (error) => {\r\n//           // Gérer les erreurs ici\r\n//         }\r\n//       );\r\n//     }\r\n//   }\r\n// }\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Resource } from '../../../DTO/resource';\r\nimport { ResourceService } from '../../../Services/resource/resource.service';\r\n\r\n@Component({\r\n  selector: 'app-resource-share',\r\n  templateUrl: './resource-share.component.html',\r\n  styleUrls: ['./resource-share.component.scss']\r\n})\r\nexport class ResourceShareComponent implements OnInit {\r\n  resourceId: string;\r\n\r\n  resource: Resource = {\r\n    id: '',\r\n    title: '',\r\n    description: '',\r\n    content: '',\r\n    image_path: '',\r\n    createdBy: '',\r\n    createdAt: '',\r\n    comment: '',\r\n  };\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private resourceService: ResourceService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.params.subscribe(params => {\r\n      this.resourceId = params['id'];\r\n      this.fetchResource();\r\n    });\r\n  }\r\n\r\n  fetchResource(): void {\r\n    this.resourceService.getResourceById(this.resourceId).subscribe(resource => {\r\n      if (resource) {\r\n        this.resource = resource;\r\n      } else {\r\n        // Handle resource not found\r\n      }\r\n    });\r\n  }\r\n}\r\n","<!-- Nous affichons les détails de la ressource sélectionnée, tels que le titre, la description, le type, le créateur et la date de création. -->\r\n<h2>Share Resource</h2>\r\n<!-- <div *ngIf=\"errorMessage\" class=\"error-message\">\r\n  {{ errorMessage }}\r\n</div> -->\r\n\r\n<!-- <div *ngIf=\"selectedResource\">\r\n  <h3>{{ selectedResource.title }}</h3>\r\n  <p>{{ selectedResource.description }}</p>\r\n  <p>Type: {{ selectedResource.content }}</p>\r\n  <p>Created By: {{ selectedResource.createdBy }}</p>\r\n  <p>Created At: {{ selectedResource.createdAt | date }}</p> -->\r\n\r\n  <!-- Ajout d'un champ d'entrée pour l'e-mail du destinataire (<input type=\"email\">) et utilisons la liaison de données bidirectionnelle avec [(ngModel)] pour lier sa valeur à la propriété recipientEmail du composant. -->\r\n  <!-- <label for=\"email\">Email</label>\r\n  <input type=\"email\" id=\"email\" [(ngModel)]=\"recipientEmail\" required> -->\r\n\r\n  <!-- bouton \"Share\" qui appelle la méthode share() lorsque cliqué. -->\r\n  <!--<button (click)=\"share()\">Share</button> -->\r\n<!-- </div> -->\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}