{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../../Services/resource/resource.service\";\nexport class ResourceShareComponent {\n  constructor(route, resourceService) {\n    this.route = route;\n    this.resourceService = resourceService;\n  }\n  ngOnInit() {\n    const resourceId = this.route.snapshot.paramMap.get('id');\n    if (resourceId) {\n      this.resourceService.getResourceById(resourceId).subscribe(resource => {\n        this.resource = resource;\n      }, error => {\n        // Gérer les erreurs ici\n      });\n    }\n  }\n}\nResourceShareComponent.ɵfac = function ResourceShareComponent_Factory(t) {\n  return new (t || ResourceShareComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ResourceService));\n};\nResourceShareComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ResourceShareComponent,\n  selectors: [[\"app-resource-share\"]],\n  decls: 2,\n  vars: 0,\n  template: function ResourceShareComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Share Resource\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;AAWA,OAAM,MAAOA,sBAAsB;EAGjCC,YACUC,KAAqB,EACrBC,eAAgC;IADhC,UAAK,GAALD,KAAK;IACL,oBAAe,GAAfC,eAAe;EACrB;EAEJC,QAAQ;IACN,MAAMC,UAAU,GAAG,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IACzD,IAAIH,UAAU,EAAE;MACd,IAAI,CAACF,eAAe,CAACM,eAAe,CAACJ,UAAU,CAAC,CAACK,SAAS,CACvDC,QAAkB,IAAI;QACrB,IAAI,CAACA,QAAQ,GAAGA,QAAQ;MAC1B,CAAC,EACAC,KAAK,IAAI;QACR;MAAA,CACD,CACF;;EAEL;;AApBWZ,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;QAAtBA,sBAAsB;EAAAa;EAAAC;EAAAC;EAAAC;IAAA;MCVnCC,0BAAI;MAAAA,8BAAc;MAAAA,iBAAK","names":["ResourceShareComponent","constructor","route","resourceService","ngOnInit","resourceId","snapshot","paramMap","get","getResourceById","subscribe","resource","error","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\lola\\Documents\\GitHub\\AngularProject\\EntreCitoyens\\src\\app\\Components\\resource\\resource-share\\resource-share.component.ts","C:\\Users\\lola\\Documents\\GitHub\\AngularProject\\EntreCitoyens\\src\\app\\Components\\resource\\resource-share\\resource-share.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { Resource } from '../../../DTO/resource';\nimport { ResourceService } from '../../../Services/resource/resource.service';\n\n@Component({\n  selector: 'app-resource-share',\n  templateUrl: './resource-share.component.html',\n  styleUrls: ['./resource-share.component.scss']\n})\nexport class ResourceShareComponent implements OnInit {\n  resource: Resource;\n\n  constructor(\n    private route: ActivatedRoute,\n    private resourceService: ResourceService\n  ) { }\n\n  ngOnInit(): void {\n    const resourceId = this.route.snapshot.paramMap.get('id');\n    if (resourceId) {\n      this.resourceService.getResourceById(resourceId).subscribe(\n        (resource: Resource) => {\n          this.resource = resource;\n        },\n        (error) => {\n          // Gérer les erreurs ici\n        }\n      );\n    }\n  }\n}\n","<!-- Nous affichons les détails de la ressource sélectionnée, tels que le titre, la description, le type, le créateur et la date de création. -->\n<h2>Share Resource</h2>\n<!-- <div *ngIf=\"errorMessage\" class=\"error-message\">\n  {{ errorMessage }}\n</div> -->\n\n<!-- <div *ngIf=\"selectedResource\">\n  <h3>{{ selectedResource.title }}</h3>\n  <p>{{ selectedResource.description }}</p>\n  <p>Type: {{ selectedResource.content }}</p>\n  <p>Created By: {{ selectedResource.createdBy }}</p>\n  <p>Created At: {{ selectedResource.createdAt | date }}</p> -->\n\n  <!-- Ajout d'un champ d'entrée pour l'e-mail du destinataire (<input type=\"email\">) et utilisons la liaison de données bidirectionnelle avec [(ngModel)] pour lier sa valeur à la propriété recipientEmail du composant. -->\n  <!-- <label for=\"email\">Email</label>\n  <input type=\"email\" id=\"email\" [(ngModel)]=\"recipientEmail\" required> -->\n\n  <!-- bouton \"Share\" qui appelle la méthode share() lorsque cliqué. -->\n  <!--<button (click)=\"share()\">Share</button> -->\n<!-- </div> -->\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}