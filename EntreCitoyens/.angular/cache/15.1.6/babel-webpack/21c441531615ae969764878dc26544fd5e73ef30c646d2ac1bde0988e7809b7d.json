{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SkillService {\n  // CONSTRUCTOR\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    /**\r\n     * If API implemented, make routes for each endoints of application\r\n    **/\n    this.endpoint = \"https:/localhost/swagger\";\n    this.getEndPoint = this.endpoint + \"/GetAll\";\n  }\n  /**\r\n   * HTTP REQUEST - CRUD RESSOURCES\r\n  **/\n  // GET ALL\n  get(id) {\n    return this.httpClient.get(this.getEndPoint + id);\n  }\n}\nSkillService.ɵfac = function SkillService_Factory(t) {\n  return new (t || SkillService)(i0.ɵɵinject(i1.HttpClient));\n};\nSkillService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SkillService,\n  factory: SkillService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,YAAY;EASvB;EACAC,YAAoBC,UAAqB;IAArB,eAAU,GAAVA,UAAU;IAR9B;;;IAIO,aAAQ,GAAG,0BAA0B;IACrC,gBAAW,GAAG,IAAI,CAACC,QAAQ,GAAC,SAAS;EAGC;EAE7C;;;EAIA;EACAC,GAAG,CAACC,EAAS;IACT,OAAO,IAAI,CAACH,UAAU,CAACE,GAAG,CAAW,IAAI,CAACE,WAAW,GAACD,EAAE,CAAC;EAC7D;;AAnBWL,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAO,SAAZP,YAAY;EAAAQ,YAFX;AAAM","names":["SkillService","constructor","httpClient","endpoint","get","id","getEndPoint","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\lola\\Documents\\GitHub\\AngularProject\\EntreCitoyens\\src\\app\\services\\skill.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SkillService {\r\n\r\n  /**\r\n   * If API implemented, make routes for each endoints of application\r\n  **/\r\n\r\n  public endpoint = \"https:/localhost/swagger\";\r\n  public getEndPoint = this.endpoint+\"/GetAll\";\r\n\r\n  // CONSTRUCTOR\r\n  constructor(private httpClient:HttpClient) { }\r\n\r\n  /**\r\n   * HTTP REQUEST - CRUD RESSOURCES\r\n  **/\r\n\r\n  // GET ALL\r\n  get(id:number):Observable<Resource>{\r\n      return this.httpClient.get<Resource>(this.getEndPoint+id)\r\n  }\r\n\r\n  // GET BY ID\r\n  // getAll():Observable<Resource[]>{\r\n  //   return this.httpClient.get<Resource[]>(this.getEndPoint);\r\n  // }\r\n\r\n  // POST\r\n  // post(resource){\r\n  //   return this.httpClient.post<Resource>(this.getEndPoint, resource);\r\n  // }\r\n\r\n  // PUT\r\n  // update(resource){\r\n  //   return this.httpClient.put<Resource>(this.getEndPoint, resource);\r\n  // }\r\n\r\n  // DELETE\r\n  // delete(id:number){\r\n  //   return this.httpClient.delete<Resource[]>(this.getEndPoint+id);\r\n  // }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}