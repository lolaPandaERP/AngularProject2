{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Services/type/type.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../../slider/slider.component\";\nconst _c0 = function () {\n  return [\"/ressources\"];\n};\nfunction ResourceTypeComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"div\", 6);\n    i0.ɵɵelement(2, \"img\", 7);\n    i0.ɵɵelementStart(3, \"div\", 8)(4, \"a\", 9)(5, \"h2\", 10);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"p\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const type_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", type_r1.image_path, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(4, _c0));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(type_r1.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(type_r1.description);\n  }\n}\nexport class ResourceTypeComponent {\n  constructor(typeService) {\n    this.typeService = typeService;\n    // Slider\n    this.sliderImages = ['../../../../assets/resourceImage/image3.png', '../../../../assets/resourceImage/image4.png'];\n    this.types = [];\n  }\n  ngOnInit() {\n    this.fetchTypes();\n  }\n  fetchTypes() {\n    this.typeService.getTypes().subscribe(types => {\n      this.types = types;\n    });\n  }\n}\nResourceTypeComponent.ɵfac = function ResourceTypeComponent_Factory(t) {\n  return new (t || ResourceTypeComponent)(i0.ɵɵdirectiveInject(i1.TypeService));\n};\nResourceTypeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ResourceTypeComponent,\n  selectors: [[\"app-resource-type\"]],\n  inputs: {\n    types: \"types\"\n  },\n  decls: 6,\n  vars: 2,\n  consts: [[3, \"images\"], [1, \"resource-type\"], [1, \"title\"], [1, \"row\", \"row-cols-1\", \"row-cols-md-3\", \"g-4\"], [\"class\", \"col\", 4, \"ngFor\", \"ngForOf\"], [1, \"col\"], [1, \"card\", \"h-100\"], [\"alt\", \"Image du type de ressource\", 1, \"card-img-top\", \"image\", 3, \"src\"], [1, \"card-body\", \"d-flex\", \"flex-column\"], [3, \"routerLink\"], [1, \"card-title\"]],\n  template: function ResourceTypeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-slider\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"h2\", 2);\n      i0.ɵɵtext(3, \"Les types de ressources\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3);\n      i0.ɵɵtemplate(5, ResourceTypeComponent_div_5_Template, 9, 5, \"div\", 4);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"images\", ctx.sliderImages);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.types);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.RouterLink, i4.SliderComponent],\n  styles: [\".resource-type[_ngcontent-%COMP%]   body[_ngcontent-%COMP%] {\\n  margin-bottom: 20px;\\n}\\n.resource-type[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%] {\\n  margin-bottom: 20px;\\n  margin-top: 20px;\\n  font-size: 26px;\\n  font-weight: bold;\\n  text-align: center;\\n}\\n.resource-type[_ngcontent-%COMP%]   .empty-message[_ngcontent-%COMP%] {\\n  margin-bottom: 20px;\\n  color: gray;\\n}\\n.resource-type[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%] {\\n  border: none;\\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\\n}\\n.resource-type[_ngcontent-%COMP%]   .card-img-top[_ngcontent-%COMP%] {\\n  height: 200px;\\n  object-fit: cover;\\n}\\n.resource-type[_ngcontent-%COMP%]   .card-title[_ngcontent-%COMP%] {\\n  font-size: 20px;\\n  font-weight: bold;\\n  margin-bottom: 10px;\\n}\\n.resource-type[_ngcontent-%COMP%]   .card-text[_ngcontent-%COMP%] {\\n  margin-bottom: 15px;\\n}\\n.resource-type[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  align-self: flex-end;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvQ29tcG9uZW50cy9yZXNvdXJjZS9yZXNvdXJjZS10eXBlL3Jlc291cmNlLXR5cGUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUU7RUFDRSxtQkFBQTtBQURKO0FBSUU7RUFDRSxtQkFBQTtFQUNBLGdCQUFBO0VBQ0EsZUFBQTtFQUNBLGlCQUFBO0VBQ0Esa0JBQUE7QUFGSjtBQUtFO0VBQ0UsbUJBQUE7RUFDQSxXQUFBO0FBSEo7QUFNRTtFQUNFLFlBQUE7RUFDQSx1Q0FBQTtBQUpKO0FBT0U7RUFDRSxhQUFBO0VBQ0EsaUJBQUE7QUFMSjtBQVFFO0VBQ0UsZUFBQTtFQUNBLGlCQUFBO0VBQ0EsbUJBQUE7QUFOSjtBQVNFO0VBQ0UsbUJBQUE7QUFQSjtBQVVFO0VBQ0Usb0JBQUE7QUFSSiIsInNvdXJjZXNDb250ZW50IjpbIi5yZXNvdXJjZS10eXBlIHtcclxuXHJcbiAgYm9keSB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gIH1cclxuXHJcbiAgLnRpdGxlIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbiAgICBtYXJnaW4tdG9wOiAyMHB4O1xyXG4gICAgZm9udC1zaXplOiAyNnB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgfVxyXG5cclxuICAuZW1wdHktbWVzc2FnZSB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gICAgY29sb3I6IGdyYXk7XHJcbiAgfVxyXG5cclxuICAuY2FyZCB7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBib3gtc2hhZG93OiAwIDAgMTBweCByZ2JhKDAsIDAsIDAsIDAuMSk7XHJcbiAgfVxyXG5cclxuICAuY2FyZC1pbWctdG9wIHtcclxuICAgIGhlaWdodDogMjAwcHg7XHJcbiAgICBvYmplY3QtZml0OiBjb3ZlcjtcclxuICB9XHJcblxyXG4gIC5jYXJkLXRpdGxlIHtcclxuICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICB9XHJcblxyXG4gIC5jYXJkLXRleHQge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTVweDtcclxuICB9XHJcblxyXG4gIGJ1dHRvbiB7XHJcbiAgICBhbGlnbi1zZWxmOiBmbGV4LWVuZDtcclxuICB9XHJcblxyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;;;;;;;;IAMIA,8BAA4C;IAExCA,yBAAyF;IACzFA,8BAA0C;IAEjBA,YAAgB;IAAAA,iBAAK;IAC5CA,yBAAG;IAAAA,YAAsB;IAAAA,iBAAI;;;;IAJ1BA,eAAuB;IAAvBA,0DAAuB;IAEvBA,eAA8B;IAA9BA,uDAA8B;IACVA,eAAgB;IAAhBA,mCAAgB;IACpCA,eAAsB;IAAtBA,yCAAsB;;;ACHnC,OAAM,MAAOC,qBAAqB;EAUhCC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAR9B;IACA,iBAAY,GAAa,CACxB,6CAA6C,EAC7C,6CAA6C,CAC9C;IAEQ,UAAK,GAAW,EAAE;EAEqB;EAEhDC,QAAQ;IACN,IAAI,CAACC,UAAU,EAAE;EACnB;EAEAA,UAAU;IACR,IAAI,CAACF,WAAW,CAACG,QAAQ,EAAE,CAACC,SAAS,CAACC,KAAK,IAAG;MAC5C,IAAI,CAACA,KAAK,GAAGA,KAAK;IACpB,CAAC,CAAC;EACJ;;AApBWP,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAQ;EAAAC;IAAAF;EAAA;EAAAG;EAAAC;EAAAC;EAAAC;IAAA;MDTlCd,gCAAiD;MACjDA,8BAA2B;MACPA,uCAAuB;MAAAA,iBAAK;MAG9CA,8BAA8C;MAC5CA,sEAUM;MACRA,iBAAM;;;MAjBIA,yCAAuB;MAMTA,eAAQ;MAARA,mCAAQ","names":["i0","ResourceTypeComponent","constructor","typeService","ngOnInit","fetchTypes","getTypes","subscribe","types","selectors","inputs","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\lola\\Documents\\GitHub\\AngularProject2\\EntreCitoyens\\src\\app\\Components\\resource\\resource-type\\resource-type.component.html","C:\\Users\\lola\\Documents\\GitHub\\AngularProject2\\EntreCitoyens\\src\\app\\Components\\resource\\resource-type\\resource-type.component.ts"],"sourcesContent":["<app-slider [images]=\"sliderImages\"></app-slider>\n<div class=\"resource-type\">\n  <h2 class=\"title\">Les types de ressources</h2>\n\n\n  <div class=\"row row-cols-1 row-cols-md-3 g-4\">\n    <div *ngFor=\"let type of types\" class=\"col\">\n      <div class=\"card h-100\">\n        <img [src]=\"type.image_path\" alt=\"Image du type de ressource\" class=\"card-img-top image\">\n        <div class=\"card-body d-flex flex-column\">\n          <a [routerLink]=\"['/ressources']\">\n          <h2 class=\"card-title\">{{ type.title }}</h2></a>\n          <p>{{ type.description }}</p>\n\n        </div>\n      </div>\n    </div>\n  </div>\n\n</div>\n\n","import { Component, OnInit, Input } from '@angular/core';\nimport { TypeService } from 'src/app/Services/type/type.service';\nimport { Type } from '../../../DTO/type'\n\n@Component({\n  selector: 'app-resource-type',\n  templateUrl: './resource-type.component.html',\n  styleUrls: ['./resource-type.component.scss']\n})\nexport class ResourceTypeComponent implements OnInit {\n\n   // Slider\n   sliderImages: string[] = [\n    '../../../../assets/resourceImage/image3.png',\n    '../../../../assets/resourceImage/image4.png',\n  ];\n\n  @Input() types: Type[] = [];\n\n  constructor(private typeService: TypeService) { }\n\n  ngOnInit(): void {\n    this.fetchTypes();\n  }\n\n  fetchTypes(): void {\n    this.typeService.getTypes().subscribe(types => {\n      this.types = types;\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}