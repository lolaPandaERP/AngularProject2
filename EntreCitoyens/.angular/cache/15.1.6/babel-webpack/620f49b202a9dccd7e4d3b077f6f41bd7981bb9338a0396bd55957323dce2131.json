{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ResourceDetailsComponent = class ResourceDetailsComponent {\n  constructor(route, resourceService) {\n    this.route = route;\n    this.resourceService = resourceService;\n    // Slider\n    this.sliderImages = ['../../../../assets/resourceImage/image3.png', '../../../../assets/resourceImage/image4.png'];\n    this.showCreateForm = false;\n  }\n  ngOnInit() {\n    const resourceId = this.route.snapshot.paramMap.get('id');\n    if (resourceId) {\n      this.loadResource(resourceId);\n    }\n  }\n  loadResource(id) {\n    this.resourceService.getResourceById(id).subscribe(resource => {\n      this.resource = resource;\n    });\n  }\n  toggleCreateForm() {\n    this.showCreateForm = !this.showCreateForm;\n  }\n  shareResource() {\n    // Vérification si la ressource existe\n    if (!this.resource) {\n      return;\n    }\n    // Préparation des données pour partager la ressource\n    const emailSubject = `Partage de la ressource : ${this.resource.title}`;\n    const emailBody = `Voici la ressource que je souhaite partager :\\n\\nTitre : ${this.resource.title}\\n\\nContenu : ${this.resource.content}`;\n    // Exemple d'implémentation de l'envoi de la ressource par e-mail\n    const emailLink = `mailto:?subject=${encodeURIComponent(emailSubject)}&body=${encodeURIComponent(emailBody)}`;\n    // Redirection vers l'application de messagerie par défaut avec le lien de partage\n    window.location.href = emailLink;\n  }\n};\nResourceDetailsComponent = __decorate([Component({\n  selector: 'app-resource-details',\n  templateUrl: './resource-details.component.html',\n  styleUrls: ['./resource-details.component.scss']\n})], ResourceDetailsComponent);\nexport { ResourceDetailsComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAU1C,IAAMC,wBAAwB,GAA9B,MAAMA,wBAAwB;EAWnCC,YACUC,KAAqB,EACrBC,eAAgC;IADhC,UAAK,GAALD,KAAK;IACL,oBAAe,GAAfC,eAAe;IAXzB;IACA,iBAAY,GAAa,CACvB,6CAA6C,EAC7C,6CAA6C,CAC9C;IAGD,mBAAc,GAAY,KAAK;EAK5B;EAEHC,QAAQ;IACN,MAAMC,UAAU,GAAG,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IACzD,IAAIH,UAAU,EAAE;MACd,IAAI,CAACI,YAAY,CAACJ,UAAU,CAAC;;EAEjC;EAEAI,YAAY,CAACC,EAAU;IACrB,IAAI,CAACP,eAAe,CAACQ,eAAe,CAACD,EAAE,CAAC,CAACE,SAAS,CAACC,QAAQ,IAAG;MAC5D,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IAC1B,CAAC,CAAC;EACJ;EAEAC,gBAAgB;IACd,IAAI,CAACC,cAAc,GAAG,CAAC,IAAI,CAACA,cAAc;EAC5C;EAEAC,aAAa;IACX;IACA,IAAI,CAAC,IAAI,CAACH,QAAQ,EAAE;MAClB;;IAGF;IACA,MAAMI,YAAY,GAAG,6BAA6B,IAAI,CAACJ,QAAQ,CAACK,KAAK,EAAE;IACvE,MAAMC,SAAS,GAAG,4DAA4D,IAAI,CAACN,QAAQ,CAACK,KAAK,iBAAiB,IAAI,CAACL,QAAQ,CAACO,OAAO,EAAE;IAEzI;IACA,MAAMC,SAAS,GAAG,mBAAmBC,kBAAkB,CAACL,YAAY,CAAC,SAASK,kBAAkB,CAACH,SAAS,CAAC,EAAE;IAE7G;IACAI,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGJ,SAAS;EAClC;CAED;AAlDYrB,wBAAwB,eALpCD,SAAS,CAAC;EACT2B,QAAQ,EAAE,sBAAsB;EAChCC,WAAW,EAAE,mCAAmC;EAChDC,SAAS,EAAE,CAAC,mCAAmC;CAChD,CAAC,GACW5B,wBAAwB,CAkDpC;SAlDYA,wBAAwB","names":["Component","ResourceDetailsComponent","constructor","route","resourceService","ngOnInit","resourceId","snapshot","paramMap","get","loadResource","id","getResourceById","subscribe","resource","toggleCreateForm","showCreateForm","shareResource","emailSubject","title","emailBody","content","emailLink","encodeURIComponent","window","location","href","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\lola\\Documents\\GitHub\\AngularProject2\\EntreCitoyens\\src\\app\\Components\\resource\\resource-details\\resource-details.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ResourceService } from '../../../Services/resource/resource.service';\r\nimport { Resource } from '../../../DTO/resource';\r\n\r\n@Component({\r\n  selector: 'app-resource-details',\r\n  templateUrl: './resource-details.component.html',\r\n  styleUrls: ['./resource-details.component.scss']\r\n})\r\nexport class ResourceDetailsComponent implements OnInit {\r\n\r\n  // Slider\r\n  sliderImages: string[] = [\r\n    '../../../../assets/resourceImage/image3.png',\r\n    '../../../../assets/resourceImage/image4.png',\r\n  ];\r\n\r\n  resource: Resource | undefined;\r\n  showCreateForm: boolean = false;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private resourceService: ResourceService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    const resourceId = this.route.snapshot.paramMap.get('id');\r\n    if (resourceId) {\r\n      this.loadResource(resourceId);\r\n    }\r\n  }\r\n\r\n  loadResource(id: string): void {\r\n    this.resourceService.getResourceById(id).subscribe(resource => {\r\n      this.resource = resource;\r\n    });\r\n  }\r\n\r\n  toggleCreateForm(): void {\r\n    this.showCreateForm = !this.showCreateForm;\r\n  }\r\n\r\n  shareResource(): void {\r\n    // Vérification si la ressource existe\r\n    if (!this.resource) {\r\n      return;\r\n    }\r\n\r\n    // Préparation des données pour partager la ressource\r\n    const emailSubject = `Partage de la ressource : ${this.resource.title}`;\r\n    const emailBody = `Voici la ressource que je souhaite partager :\\n\\nTitre : ${this.resource.title}\\n\\nContenu : ${this.resource.content}`;\r\n\r\n    // Exemple d'implémentation de l'envoi de la ressource par e-mail\r\n    const emailLink = `mailto:?subject=${encodeURIComponent(emailSubject)}&body=${encodeURIComponent(emailBody)}`;\r\n\r\n    // Redirection vers l'application de messagerie par défaut avec le lien de partage\r\n    window.location.href = emailLink;\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}