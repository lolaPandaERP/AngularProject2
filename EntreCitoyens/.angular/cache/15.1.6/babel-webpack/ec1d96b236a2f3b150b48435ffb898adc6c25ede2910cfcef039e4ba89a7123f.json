{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../../Services/resource/resource.service\";\nimport * as i3 from \"@angular/common\";\nfunction ResourceShareComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n}\nexport class ResourceShareComponent {\n  constructor(route, resourceService) {\n    this.route = route;\n    this.resourceService = resourceService;\n    const resourceId = this.route.snapshot.params['id'];\n    this.resource = this.resourceService.getResourceById(resourceId);\n  }\n}\nResourceShareComponent.ɵfac = function ResourceShareComponent_Factory(t) {\n  return new (t || ResourceShareComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ResourceService));\n};\nResourceShareComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ResourceShareComponent,\n  selectors: [[\"app-resource-share\"]],\n  decls: 3,\n  vars: 1,\n  consts: [[4, \"ngIf\"]],\n  template: function ResourceShareComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Share Resource\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, ResourceShareComponent_div_2_Template, 1, 0, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.selectedResource);\n    }\n  },\n  dependencies: [i3.NgIf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAMAA,sBAaM;;;ACTN,OAAM,MAAOC,sBAAsB;EAGjCC,YAAoBC,KAAqB,EAAUC,eAAgC;IAA/D,UAAK,GAALD,KAAK;IAA0B,oBAAe,GAAfC,eAAe;IAChE,MAAMC,UAAU,GAAG,IAAI,CAACF,KAAK,CAACG,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC;IACnD,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACJ,eAAe,CAACK,eAAe,CAACJ,UAAU,CAAC;EAClE;;AANWJ,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;QAAtBA,sBAAsB;EAAAS;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDTnCd,0BAAI;MAAAA,8BAAc;MAAAA,iBAAK;MAKvBA,uEAaM;;;MAbAA,eAAsB;MAAtBA,2CAAsB","names":["i0","ResourceShareComponent","constructor","route","resourceService","resourceId","snapshot","params","resource","getResourceById","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\lola\\Documents\\GitHub\\AngularProject\\EntreCitoyens\\src\\app\\Components\\resource\\resource-share\\resource-share.component.html","C:\\Users\\lola\\Documents\\GitHub\\AngularProject\\EntreCitoyens\\src\\app\\Components\\resource\\resource-share\\resource-share.component.ts"],"sourcesContent":["<!-- Nous affichons les détails de la ressource sélectionnée, tels que le titre, la description, le type, le créateur et la date de création. -->\n<h2>Share Resource</h2>\n<!-- <div *ngIf=\"errorMessage\" class=\"error-message\">\n  {{ errorMessage }}\n</div> -->\n\n<div *ngIf=\"selectedResource\">\n  <!-- <h3>{{ selectedResource.title }}</h3>\n  <p>{{ selectedResource.description }}</p>\n  <p>Type: {{ selectedResource.content }}</p>\n  <p>Created By: {{ selectedResource.createdBy }}</p>\n  <p>Created At: {{ selectedResource.createdAt | date }}</p> -->\n\n  <!-- Ajout d'un champ d'entrée pour l'e-mail du destinataire (<input type=\"email\">) et utilisons la liaison de données bidirectionnelle avec [(ngModel)] pour lier sa valeur à la propriété recipientEmail du composant. -->\n  <!-- <label for=\"email\">Email</label>\n  <input type=\"email\" id=\"email\" [(ngModel)]=\"recipientEmail\" required> -->\n\n  <!-- bouton \"Share\" qui appelle la méthode share() lorsque cliqué. -->\n  <!--<button (click)=\"share()\">Share</button> -->\n</div>\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ResourceService } from '../../../Services/resource/resource.service';\nimport { Resource } from '../../../DTO/resource';\n\n@Component({\n  selector: 'app-resource-share',\n  templateUrl: './resource-share.component.html',\n  styleUrls: ['./resource-share.component.scss']\n})\nexport class ResourceShareComponent {\n  resource: Resource;\n\n  constructor(private route: ActivatedRoute, private resourceService: ResourceService) {\n    const resourceId = this.route.snapshot.params['id'];\n    this.resource = this.resourceService.getResourceById(resourceId);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}