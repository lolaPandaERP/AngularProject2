{"ast":null,"code":"import { Observable } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SkillService {\n  // CONSTRUCTOR\n  constructor(httpClient) {\n    /**\r\n     * HTTP REQUEST - CRUD RESSOURCES\r\n    **/\n    this.httpClient = httpClient;\n    /**\r\n     * If API implemented, make routes for each endoints of application\r\n    **/\n    this.endpoint = \"https:/localhost/swagger\";\n    this.getEndPoint = this.endpoint + \"/GetAll\";\n    // GET ALL\n    get(id, number);\n    Observable < Ressource > {\n      return: this.httpClient.get(this.getEndPoint + id)\n    };\n    // GET BY ID\n    // getAll():Observable<Resource[]>{\n    //   return this.httpClient.get<Resource[]>(this.getEndPoint);\n    // }\n    // POST\n    // post(resource){\n    //   return this.httpClient.post<Resource>(this.getEndPoint, resource);\n    // }\n    // PUT\n    // update(resource){\n    //   return this.httpClient.put<Resource>(this.getEndPoint, resource);\n    // }\n    // DELETE\n    // delete(id:number){\n    //   return this.httpClient.delete<Resource[]>(this.getEndPoint+id);\n    // }\n  }\n}\n\nSkillService.ɵfac = function SkillService_Factory(t) {\n  return new (t || SkillService)(i0.ɵɵinject(i1.HttpClient));\n};\nSkillService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SkillService,\n  factory: SkillService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,UAAU,QAAQ,MAAM;;;AAKjC,OAAM,MAAOC,YAAY;EASvB;EACAC,YAAoBC,UAAqB;IAEzC;;;IAFoB,eAAU,GAAVA,UAAU;IAR9B;;;IAIO,aAAQ,GAAG,0BAA0B;IACrC,gBAAW,GAAG,IAAI,CAACC,QAAQ,GAAC,SAAS;IAS5C;IACAC,GAAG,CAACC,EAAE,EAACC,MAAM,CAAC;IAACP,UAAU,GAACQ,SAAS,GAAC;MAChCC,MAAM,EAAC,IAAI,CAACN,UAAU,CAACE,GAAG,CAAY,IAAI,CAACK,WAAW,GAACJ,EAAE;KAC5D;IAED;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;EACF;;;AAxCaL,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAU,SAAZV,YAAY;EAAAW,YAFX;AAAM","names":["Observable","SkillService","constructor","httpClient","endpoint","get","id","number","Ressource","return","getEndPoint","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\lola\\Documents\\GitHub\\AngularProject\\EntreCitoyens\\src\\app\\services\\skill.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SkillService {\r\n\r\n  /**\r\n   * If API implemented, make routes for each endoints of application\r\n  **/\r\n\r\n  public endpoint = \"https:/localhost/swagger\";\r\n  public getEndPoint = this.endpoint+\"/GetAll\";\r\n\r\n  // CONSTRUCTOR\r\n  constructor(private httpClient:HttpClient) {\r\n\r\n  /**\r\n   * HTTP REQUEST - CRUD RESSOURCES\r\n  **/\r\n\r\n  // GET ALL\r\n  get(id:number):Observable<Ressource>{\r\n      return this.httpClient.get<Ressource>(this.getEndPoint+id)\r\n  }\r\n\r\n  // GET BY ID\r\n  // getAll():Observable<Resource[]>{\r\n  //   return this.httpClient.get<Resource[]>(this.getEndPoint);\r\n  // }\r\n\r\n  // POST\r\n  // post(resource){\r\n  //   return this.httpClient.post<Resource>(this.getEndPoint, resource);\r\n  // }\r\n\r\n  // PUT\r\n  // update(resource){\r\n  //   return this.httpClient.put<Resource>(this.getEndPoint, resource);\r\n  // }\r\n\r\n  // DELETE\r\n  // delete(id:number){\r\n  //   return this.httpClient.delete<Resource[]>(this.getEndPoint+id);\r\n  // }\r\n}\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}