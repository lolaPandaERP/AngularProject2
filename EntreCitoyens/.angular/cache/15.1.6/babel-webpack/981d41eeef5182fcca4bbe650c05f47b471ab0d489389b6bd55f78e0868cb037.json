{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../Services/category/category.service\";\nexport class CategoryCreateComponent {\n  constructor(formBuilder, categoryService) {\n    this.formBuilder = formBuilder;\n    this.categoryService = categoryService;\n    this.categoryForm = this.formBuilder.group({\n      title: ['', Validators.required],\n      description: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    if (this.categoryForm.invalid) {\n      return;\n    }\n    const category = {\n      title: this.categoryForm.value.title,\n      description: this.categoryForm.value.description\n    };\n    this.categoryService.createCategory(category).subscribe(createdCategory => {\n      // Gérer la catégorie créée ici (par exemple, afficher un message de succès)\n    });\n  }\n}\nCategoryCreateComponent.ɵfac = function CategoryCreateComponent_Factory(t) {\n  return new (t || CategoryCreateComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.CategoryService));\n};\nCategoryCreateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CategoryCreateComponent,\n  selectors: [[\"app-category-create\"]],\n  decls: 14,\n  vars: 1,\n  consts: [[1, \"container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", 1, \"form-control\"], [\"for\", \"description\"], [\"id\", \"description\", \"formControlName\", \"description\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n  template: function CategoryCreateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Create Category\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function CategoryCreateComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.createCategory();\n      });\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n      i0.ɵɵtext(6, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 5);\n      i0.ɵɵtext(10, \"Description:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"textarea\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"button\", 7);\n      i0.ɵɵtext(13, \"Create\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.categoryForm);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;AASnE,OAAM,MAAOC,uBAAuB;EAGlCC,YAAoBC,WAAwB,EAAUC,eAAgC;IAAlE,gBAAW,GAAXD,WAAW;IAAuB,oBAAe,GAAfC,eAAe;IACnE,IAAI,CAACC,YAAY,GAAG,IAAI,CAACF,WAAW,CAACG,KAAK,CAAC;MACzCC,KAAK,EAAE,CAAC,EAAE,EAAEP,UAAU,CAACQ,QAAQ,CAAC;MAChCC,WAAW,EAAE,CAAC,EAAE,EAAET,UAAU,CAACQ,QAAQ;KACtC,CAAC;EACJ;EAEAE,QAAQ;IACN,IAAI,IAAI,CAACL,YAAY,CAACM,OAAO,EAAE;MAC7B;;IAGF,MAAMC,QAAQ,GAAa;MACzBL,KAAK,EAAE,IAAI,CAACF,YAAY,CAACQ,KAAK,CAACN,KAAK;MACpCE,WAAW,EAAE,IAAI,CAACJ,YAAY,CAACQ,KAAK,CAACJ;KACtC;IAED,IAAI,CAACL,eAAe,CAACU,cAAc,CAACF,QAAQ,CAAC,CAACG,SAAS,CAACC,eAAe,IAAG;MACxE;IAAA,CACD,CAAC;EACJ;;AAvBWf,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAAgB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVpCC,8BAAuB;MACjBA,+BAAe;MAAAA,iBAAK;MACxBA,+BAA+D;MAA9BA;QAAA,OAAYC,oBAAgB;MAAA,EAAC;MAC5DD,8BAAwB;MACJA,qBAAK;MAAAA,iBAAQ;MAC/BA,2BAAyE;MAC3EA,iBAAM;MACNA,8BAAwB;MACGA,6BAAY;MAAAA,iBAAQ;MAC7CA,+BAAyF;MAC3FA,iBAAM;MACNA,kCAA8C;MAAAA,uBAAM;MAAAA,iBAAS;;;MATzDA,eAA0B;MAA1BA,4CAA0B","names":["Validators","CategoryCreateComponent","constructor","formBuilder","categoryService","categoryForm","group","title","required","description","onSubmit","invalid","category","value","createCategory","subscribe","createdCategory","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\lola\\Documents\\GitHub\\AngularProject\\EntreCitoyens\\src\\app\\Components\\category\\category-create\\category-create.component.ts","C:\\Users\\lola\\Documents\\GitHub\\AngularProject\\EntreCitoyens\\src\\app\\Components\\category\\category-create\\category-create.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { CategoryService } from '../../../Services/category/category.service';\nimport { Category } from '../../../DTO/category';\n\n@Component({\n  selector: 'app-category-create',\n  templateUrl: './category-create.component.html',\n  styleUrls: ['./category-create.component.scss']\n})\nexport class CategoryCreateComponent {\n  categoryForm: FormGroup;\n\n  constructor(private formBuilder: FormBuilder, private categoryService: CategoryService) {\n    this.categoryForm = this.formBuilder.group({\n      title: ['', Validators.required],\n      description: ['', Validators.required]\n    });\n  }\n\n  onSubmit(): void {\n    if (this.categoryForm.invalid) {\n      return;\n    }\n\n    const category: Category = {\n      title: this.categoryForm.value.title,\n      description: this.categoryForm.value.description\n    };\n\n    this.categoryService.createCategory(category).subscribe(createdCategory => {\n      // Gérer la catégorie créée ici (par exemple, afficher un message de succès)\n    });\n  }\n}\n","<div class=\"container\">\n  <h2>Create Category</h2>\n  <form [formGroup]=\"categoryForm\" (ngSubmit)=\"createCategory()\">\n    <div class=\"form-group\">\n      <label for=\"name\">Name:</label>\n      <input type=\"text\" id=\"name\" class=\"form-control\" formControlName=\"name\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"description\">Description:</label>\n      <textarea id=\"description\" class=\"form-control\" formControlName=\"description\"></textarea>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\">Create</button>\n  </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}