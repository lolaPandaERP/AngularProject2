{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SkillService {\n  // CONSTRUCTOR\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    /**\r\n     * If API implemented, make routes for each endoints of application\r\n    **/\n    this.endpoint = \"https:/localhost/swagger\";\n    this.getEndPoint = this.endpoint + \"/GetAll\";\n  }\n}\nSkillService.ɵfac = function SkillService_Factory(t) {\n  return new (t || SkillService)(i0.ɵɵinject(i1.HttpClient));\n};\nSkillService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SkillService,\n  factory: SkillService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,YAAY;EASvB;EACAC,YAAoBC,UAAqB;IAArB,eAAU,GAAVA,UAAU;IAR9B;;;IAIO,aAAQ,GAAG,0BAA0B;IACrC,gBAAW,GAAG,IAAI,CAACC,QAAQ,GAAC,SAAS;EAGC;;AAVlCH,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAI,SAAZJ,YAAY;EAAAK,YAFX;AAAM","names":["SkillService","constructor","httpClient","endpoint","factory","providedIn"],"sourceRoot":"","sources":["C:\\laragon\\www\\CLV_FRONT_PROJECT\\AngularProject\\src\\app\\services\\skill.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Skill } from '../DTO/skill.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SkillService {\n\n  /**\n   * If API implemented, make routes for each endoints of application\n  **/\n\n  public endpoint = \"https:/localhost/swagger\";\n  public getEndPoint = this.endpoint+\"/GetAll\";\n\n  // CONSTRUCTOR\n  constructor(private httpClient:HttpClient) { }\n\n  // HTTP REQUEST - CRUD RESSOURCES\n  // GET ALL\n  // get(id:number):Observable<Resource>{\n  //     return this.httpClient.get<Resource>(this.getEndPoint+id)\n  // }\n\n  // GET BY ID\n  // getAll():Observable<Resource[]>{\n  //   return this.httpClient.get<Resource[]>(this.getEndPoint);\n  // }\n\n  // POST\n  // post(resource){\n  //   return this.httpClient.post<Resource>(this.getEndPoint, resource);\n  // }\n\n  // PUT\n  // update(resource){\n  //   return this.httpClient.put<Resource>(this.getEndPoint, resource);\n  // }\n\n  // DELETE\n  // delete(id:number){\n  //   return this.httpClient.delete<Resource[]>(this.getEndPoint+id);\n  // }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}