{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SkillService {\n  // Constructeur\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    // If not API implemented\n    this.database = {\n      skill: [{\n        id: 1,\n        name: \".NET\"\n      }]\n    };\n    /**\r\n     * If API implemented, make routes for each endoints of application\r\n    **/\n    this.endpoint = \"https:/localhost/swagger\";\n    this.getEndPoint = this.endPoint + \"/GetAll\";\n  }\n  // WITH API\n  // get(id:number):Observable<Skill>{\n  // return this.httpClient.get<Skill>(this.getEndPoint+id)\n  // }\n  getAll() {\n    return this.httpClient.get(this.getEndPoint);\n  }\n  post(skill) {\n    return this.httpClient.post(this.getEndPoint, skill);\n  }\n  update(skill) {\n    return this.httpClient.put(this.getEndPoint, skill);\n  }\n  delete(id) {\n    return this.httpClient.delete(this.getEndPoint + id);\n  }\n  // WITHOUT API\n  getFromDB(id) {\n    return this.database.skill.find(x => x.id == id);\n  }\n  getAllFromDB() {\n    return this.database.skill;\n  }\n  postFromDB(skill) {\n    this.httpClient.post(this.getEndPoint, skill);\n  }\n  deleteFromDB(id) {\n    this.httpClient.delete(this.getEndPoint + id);\n  }\n  updateFomDB(skill) {\n    let query = this.database.skill.findIndex(x => x.id == skill.id);\n  }\n}\nSkillService.ɵfac = function SkillService_Factory(t) {\n  return new (t || SkillService)(i0.ɵɵinject(i1.HttpClient));\n};\nSkillService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SkillService,\n  factory: SkillService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,YAAY;EAoBvB;EACAC,YAAoBC,UAAqB;IAArB,eAAU,GAAVA,UAAU;IAnB9B;IACA,aAAQ,GAAG;MACTC,KAAK,EAAE,CACL;QACEC,EAAE,EAAC,CAAC;QACJC,IAAI,EAAC;OAEN;KAEJ;IAED;;;IAIO,aAAQ,GAAG,0BAA0B;IACrC,gBAAW,GAAG,IAAI,CAACC,QAAQ,GAAC,SAAS;EAGC;EAE7C;EAEA;EACI;EACJ;EAEAC,MAAM;IACJ,OAAO,IAAI,CAACL,UAAU,CAACM,GAAG,CAAU,IAAI,CAACC,WAAW,CAAC;EACvD;EACAC,IAAI,CAACP,KAAK;IACR,OAAO,IAAI,CAACD,UAAU,CAACQ,IAAI,CAAQ,IAAI,CAACD,WAAW,EAAEN,KAAK,CAAC;EAC7D;EAEAQ,MAAM,CAACR,KAAK;IACV,OAAO,IAAI,CAACD,UAAU,CAACU,GAAG,CAAQ,IAAI,CAACH,WAAW,EAAEN,KAAK,CAAC;EAC5D;EACAU,MAAM,CAACT,EAAS;IACd,OAAO,IAAI,CAACF,UAAU,CAACW,MAAM,CAAU,IAAI,CAACJ,WAAW,GAACL,EAAE,CAAC;EAC7D;EAEA;EACAU,SAAS,CAACV,EAAE;IACV,OAAO,IAAI,CAACW,QAAQ,CAACZ,KAAK,CAACa,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACb,EAAE,IAAIA,EAAE,CAAC;EAClD;EAEAc,YAAY;IACV,OAAO,IAAI,CAACH,QAAQ,CAACZ,KAAK;EAC5B;EAEAgB,UAAU,CAAChB,KAAK;IACb,IAAI,CAACD,UAAU,CAACQ,IAAI,CAAQ,IAAI,CAACD,WAAW,EAAEN,KAAK,CAAC;EACvD;EAEAiB,YAAY,CAAChB,EAAE;IACb,IAAI,CAACF,UAAU,CAACW,MAAM,CAAQ,IAAI,CAACJ,WAAW,GAACL,EAAE,CAAC;EACpD;EAEAiB,WAAW,CAAClB,KAAK;IACf,IAAImB,KAAK,GAAG,IAAI,CAACP,QAAQ,CAACZ,KAAK,CAACoB,SAAS,CAACN,CAAC,IAAIA,CAAC,CAACb,EAAE,IAAID,KAAK,CAACC,EAAE,CAAC;EAElE;;AA/DWJ,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAwB,SAAZxB,YAAY;EAAAyB,YAFX;AAAM","names":["SkillService","constructor","httpClient","skill","id","name","endPoint","getAll","get","getEndPoint","post","update","put","delete","getFromDB","database","find","x","getAllFromDB","postFromDB","deleteFromDB","updateFomDB","query","findIndex","factory","providedIn"],"sourceRoot":"","sources":["C:\\laragon\\www\\angular\\AngularProject\\src\\app\\services\\skill.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Skill } from '../DTO/skill.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SkillService {\n\n  // If not API implemented\n  database = {\n    skill: [\n      {\n        id:1,\n        name:\".NET\",\n\n      }\n    ],\n  }\n\n  /**\n   * If API implemented, make routes for each endoints of application\n  **/\n\n  public endpoint = \"https:/localhost/swagger\";\n  public getEndPoint = this.endPoint+\"/GetAll\";\n\n  // Constructeur\n  constructor(private httpClient:HttpClient) { }\n\n  // WITH API\n\n  // get(id:number):Observable<Skill>{\n      // return this.httpClient.get<Skill>(this.getEndPoint+id)\n  // }\n\n  getAll():Observable<Skill[]>{\n    return this.httpClient.get<Skill[]>(this.getEndPoint);\n  }\n  post(skill){\n    return this.httpClient.post<Skill>(this.getEndPoint, skill);\n  }\n\n  update(skill){\n    return this.httpClient.put<Skill>(this.getEndPoint, skill);\n  }\n  delete(id:number){\n    return this.httpClient.delete<Skill[]>(this.getEndPoint+id);\n  }\n\n  // WITHOUT API\n  getFromDB(id){\n    return this.database.skill.find(x => x.id == id);\n  }\n\n  getAllFromDB(){\n    return this.database.skill;\n  }\n\n  postFromDB(skill){\n     this.httpClient.post<Skill>(this.getEndPoint, skill);\n  }\n\n  deleteFromDB(id){\n    this.httpClient.delete<Skill>(this.getEndPoint+id);\n  }\n\n  updateFomDB(skill){\n    let query = this.database.skill.findIndex(x => x.id == skill.id);\n\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}