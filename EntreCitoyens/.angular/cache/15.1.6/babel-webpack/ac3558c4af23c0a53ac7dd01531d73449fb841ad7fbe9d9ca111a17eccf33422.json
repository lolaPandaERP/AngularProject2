{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ResourceService {\n  constructor(http) {\n    this.http = http;\n    // database: Resource[] = [\n    //   {\n    //     id: '1',\n    //     title: 'Les relations citoyennes',\n    //     description: 'Description de l\\'article sur les relations citoyennes',\n    //     content: 'Contenu de l\\'article...',\n    //     image_path: '/',\n    //     createdBy: 'Lola CAILLAUD',\n    //     createdAt: '17/05/2023 à 12:10'\n    //   },\n    //   {\n    //     id: '2',\n    //     title: 'Les relations citoyennes 2',\n    //     description: 'Description de l\\'article sur les relations citoyennes',\n    //     content: 'Contenu de l\\'article...',\n    //     image_path: '...',\n    //     createdBy: 'Clément RAFANEAU',\n    //     createdAt: '17/05/2023 à 12:15'\n    //   },\n    //   {\n    //     id: '3',\n    //     title: 'Les relations citoyennes 3',\n    //     description: 'Description de l\\'article sur les relations citoyennes',\n    //     content: 'Contenu de l\\'article...',\n    //     image_path: '/',\n    //     createdBy: 'Virgile FOUCHE',\n    //     createdAt: '17/05/2023 à 12:20'\n    //   }\n    // ];\n    // getResources(): Resource[] {\n    //   return this.database;\n    // }\n    // getResourceById(id: string): Resource | undefined {\n    //   return this.database.find(resource => resource.id === id);\n    // }\n    // createResource(resource: Resource): void {\n    //   resource.id = (this.database.length + 1).toString(); // Génère un ID unique\n    //   this.database.push(resource);\n    // }\n    // updateResource(id: string, resource: Resource): void {\n    //   const index = this.database.findIndex(item => item.id === id);\n    //   if (index !== -1) {\n    //     this.database[index] = { ...resource, id };\n    //   }\n    // }\n    // deleteResource(id: string): void {\n    //   const index = this.database.findIndex(item => item.id === id);\n    //   if (index !== -1) {\n    //     this.database.splice(index, 1);\n    //   }\n    // }\n    this.apiUrl = 'http://localhost:3000/api/resources'; // Remplacez par l'URL de votre API\n  }\n\n  getResources() {\n    return this.http.get(this.apiUrl);\n  }\n  getResourceById(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  createResource(resource) {\n    return this.http.post(this.apiUrl, resource);\n  }\n  updateResource(resource) {\n    return this.http.put(`${this.apiUrl}/${resource.id}`, resource);\n  }\n  deleteResource(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n}\nResourceService.ɵfac = function ResourceService_Factory(t) {\n  return new (t || ResourceService)(i0.ɵɵinject(i1.HttpClient));\n};\nResourceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ResourceService,\n  factory: ResourceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,eAAe;EA6D1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IA3DxB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IAEA;IACA;IACA;IAEA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IAEQ,WAAM,GAAG,qCAAqC,CAAC,CAAC;EAEhB;;EAExCC,YAAY;IACV,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAa,IAAI,CAACC,MAAM,CAAC;EAC/C;EAEAC,eAAe,CAACC,EAAU;IACxB,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAW,GAAG,IAAI,CAACC,MAAM,IAAIE,EAAE,EAAE,CAAC;EACxD;EAEAC,cAAc,CAACC,QAAkB;IAC/B,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAW,IAAI,CAACL,MAAM,EAAEI,QAAQ,CAAC;EACxD;EAEAE,cAAc,CAACF,QAAkB;IAC/B,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAW,GAAG,IAAI,CAACP,MAAM,IAAII,QAAQ,CAACF,EAAE,EAAE,EAAEE,QAAQ,CAAC;EAC3E;EAEAI,cAAc,CAACN,EAAU;IACvB,OAAO,IAAI,CAACL,IAAI,CAACY,MAAM,CAAO,GAAG,IAAI,CAACT,MAAM,IAAIE,EAAE,EAAE,CAAC;EACvD;;AAjFWP,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAe,SAAff,eAAe;EAAAgB,YAHd;AAAM","names":["ResourceService","constructor","http","getResources","get","apiUrl","getResourceById","id","createResource","resource","post","updateResource","put","deleteResource","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\lola\\Documents\\GitHub\\AngularProject\\EntreCitoyens\\src\\app\\Services\\resource\\resource.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Resource } from '../../DTO/resource';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ResourceService {\r\n\r\n  // database: Resource[] = [\r\n  //   {\r\n  //     id: '1',\r\n  //     title: 'Les relations citoyennes',\r\n  //     description: 'Description de l\\'article sur les relations citoyennes',\r\n  //     content: 'Contenu de l\\'article...',\r\n  //     image_path: '/',\r\n  //     createdBy: 'Lola CAILLAUD',\r\n  //     createdAt: '17/05/2023 à 12:10'\r\n  //   },\r\n  //   {\r\n  //     id: '2',\r\n  //     title: 'Les relations citoyennes 2',\r\n  //     description: 'Description de l\\'article sur les relations citoyennes',\r\n  //     content: 'Contenu de l\\'article...',\r\n  //     image_path: '...',\r\n  //     createdBy: 'Clément RAFANEAU',\r\n  //     createdAt: '17/05/2023 à 12:15'\r\n  //   },\r\n  //   {\r\n  //     id: '3',\r\n  //     title: 'Les relations citoyennes 3',\r\n  //     description: 'Description de l\\'article sur les relations citoyennes',\r\n  //     content: 'Contenu de l\\'article...',\r\n  //     image_path: '/',\r\n  //     createdBy: 'Virgile FOUCHE',\r\n  //     createdAt: '17/05/2023 à 12:20'\r\n  //   }\r\n  // ];\r\n\r\n  // getResources(): Resource[] {\r\n  //   return this.database;\r\n  // }\r\n\r\n  // getResourceById(id: string): Resource | undefined {\r\n  //   return this.database.find(resource => resource.id === id);\r\n  // }\r\n\r\n  // createResource(resource: Resource): void {\r\n  //   resource.id = (this.database.length + 1).toString(); // Génère un ID unique\r\n  //   this.database.push(resource);\r\n  // }\r\n\r\n  // updateResource(id: string, resource: Resource): void {\r\n  //   const index = this.database.findIndex(item => item.id === id);\r\n  //   if (index !== -1) {\r\n  //     this.database[index] = { ...resource, id };\r\n  //   }\r\n  // }\r\n\r\n  // deleteResource(id: string): void {\r\n  //   const index = this.database.findIndex(item => item.id === id);\r\n  //   if (index !== -1) {\r\n  //     this.database.splice(index, 1);\r\n  //   }\r\n  // }\r\n\r\n  private apiUrl = 'http://localhost:3000/api/resources'; // Remplacez par l'URL de votre API\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getResources(): Observable<Resource[]> {\r\n    return this.http.get<Resource[]>(this.apiUrl);\r\n  }\r\n\r\n  getResourceById(id: string): Observable<Resource> {\r\n    return this.http.get<Resource>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  createResource(resource: Resource): Observable<Resource> {\r\n    return this.http.post<Resource>(this.apiUrl, resource);\r\n  }\r\n\r\n  updateResource(resource: Resource): Observable<Resource> {\r\n    return this.http.put<Resource>(`${this.apiUrl}/${resource.id}`, resource);\r\n  }\r\n\r\n  deleteResource(id: string): Observable<void> {\r\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}